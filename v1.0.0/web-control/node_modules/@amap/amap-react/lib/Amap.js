"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./loadAmap.js"),t=require("./_virtual/_tslib.js"),o=require("react"),r=require("./hooks/events.js"),n=require("./utils/compare.js"),s=require("./utils/clone.js"),u=require("./hooks/props.js"),a=require("./utils/convert.js"),i=require("./utils/options.js"),l=require("./hooks/utils/usePromise.js"),c=require("./hooks/utils/useReactiveRef.js");function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var v=d(o),p=v.default.createContext(void 0),E=o.forwardRef((function(d,E){var f=o.useRef(null),h=c.default(),g=l.default((function(){return e.default()}));o.useEffect((function(){if(g){var e=f.current;if(e){var o=t.__assign({},i.getInitialOptionsFromProps(d)),r=d.center;Array.isArray(r)&&(o.center=s.default(r)),h.current=new g.Map(e,o)}return function(){h.current&&h.current.destroy()}}}),[g]);var P=h.current;return o.useImperativeHandle(E,(function(){return P}),[P]),u.useBindProp(P,{getter:function(e){return a.lngLat2Array(e.getCenter())},equals:n.nearPair,setter:function(e,t){e.setCenter(t)}},d.center),u.useBindProp(P,{getter:"getZoom",equals:n.near,setter:"setZoom"},d.zoom),u.useBindProp(P,{getter:"getRotation",equals:n.near,setter:"setRotation"},d.rotation),u.useBindProp(P,{getter:"getPitch",equals:n.near,setter:"setPitch"},d.pitch),u.useBindProp(P,{setter:"setFeatures"},d.features),u.useBindProp(P,{setter:m("dragEnable")},d.dragEnable),u.useBindProp(P,{setter:m("zoomEnable")},d.zoomEnable),u.useBindProp(P,{setter:m("jogEnable")},d.jogEnable),u.useBindProp(P,{setter:m("pitchEnable")},d.pitchEnable),u.useBindProp(P,{setter:m("rotateEnable")},d.rotateEnable),u.useBindProp(P,{setter:m("animateEnable")},d.animateEnable),u.useBindProp(P,{setter:m("keyboardEnable")},d.keyboardEnable),u.useBindProp(P,{setter:m("doubleClickZoom")},d.doubleClickZoom),u.useBindProp(P,{setter:m("scrollWheel")},d.scrollWheel),u.useBindProp(P,{setter:"setDefaultCursor"},d.defaultCursor),u.useBindProp(P,{setter:"setMapStyle"},d.mapStyle),u.useBindProp(P,{setter:m("showIndoorMap")},d.showIndoorMap),r.useEvent(P,"resize",d.onResize),r.useEvent(P,"complete",d.onComplete),r.useEvent(P,"click",d.onClick),r.useEvent(P,"dblclick",d.onDblClick),r.useEvent(P,"mapmove",d.onMapMove),r.useEvent(P,"hotspotclick",d.onHotspotClick),r.useEvent(P,"hotspotover",d.onHotspotOver),r.useEvent(P,"hotspotout",d.onHotspotOut),r.useEvent(P,"movestart",d.onMoveStart),r.useEvent(P,"moveend",d.onMoveEnd),r.useEvent(P,"zoomchange",d.onZoomChange),r.useEvent(P,"zoomstart",d.onZoomStart),r.useEvent(P,"zoomend",d.onZoomEnd),r.useEvent(P,"mousemove",d.onMouseMove),r.useEvent(P,"mousewheel",d.onMouseWheel),r.useEvent(P,"mouseover",d.onMouseOver),r.useEvent(P,"mouseout",d.onMouseOut),r.useEvent(P,"mouseup",d.onMouseUp),r.useEvent(P,"mousedown",d.onMouseDown),r.useEvent(P,"rightclick",d.onRightClick),r.useEvent(P,"dragstart",d.onDragStart),r.useEvent(P,"dragging",d.onDragging),r.useEvent(P,"dragend",d.onDragEnd),r.useEvent(P,"touchstart",d.onTouchStart),r.useEvent(P,"touchmove",d.onTouchMove),r.useEvent(P,"touchend",d.onTouchEnd),v.default.createElement("div",{ref:f,className:"amap-react",style:{position:"relative",width:"100%",height:"100%"}},v.default.createElement(p.Provider,{value:P},d.children))}));function m(e){return function(t,o){var r;t.setStatus(((r={})[e]=o,r))}}E.AmapContext=p,exports.AmapContext=p,exports.default=E;
