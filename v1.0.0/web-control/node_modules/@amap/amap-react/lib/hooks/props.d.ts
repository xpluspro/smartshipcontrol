declare type PropSetter<T, C = AMap.Map> = (target: C, value: T) => void;
declare type PropGetter<T, C = AMap.Map> = (target: C) => T;
declare type PropDef<T, C = AMap.Map> = {
    name?: string;
    setter?: string | PropSetter<T, C>;
    getter?: string | PropGetter<T, C>;
    clone?: boolean;
    equals?: (a: T, b: T) => boolean;
    validate?: (value: T) => boolean;
};
export declare function useBindProp<T, C = AMap.Map>(target: C | undefined, def: PropDef<T, C>, propValue: T | undefined): void;
export {};
