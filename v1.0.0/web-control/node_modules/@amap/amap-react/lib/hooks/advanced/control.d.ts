/// <reference types="react" />
import { BaseProps } from '../common/base';
import { VisibleProps } from '../common/visible';
import { EventHandler } from '../events';
export declare type BaseControlProps<C extends AMap.Control> = React.PropsWithChildren<BaseProps<C> & VisibleProps<C> & {
    onShow?: EventHandler<C>;
    onHide?: EventHandler<C>;
}>;
export declare function useControl<C extends AMap.Control>(def: {
    init: (AMap: AMapGlobal, map: AMap.Map) => C;
    destroy?: (target: C) => void;
    prepare?: (() => Promise<any>) | undefined;
}, props: BaseControlProps<C>): C | undefined;
export declare const ControlPositions: readonly ["LT", "RT", "LB", "RB"];
export declare type ControlPositionType = typeof ControlPositions[number] | Partial<{
    left: number | string;
    top: number | string;
    right: number | string;
    bottom: number | string;
}>;
