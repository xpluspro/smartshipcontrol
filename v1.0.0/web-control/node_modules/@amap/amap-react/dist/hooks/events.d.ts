export declare type EventTarget = {
    on(event: string | string[], handler: (e: any) => void): void;
    off(event: string | string[], handler: (e: any) => void): void;
};
export declare type EventHandler<C extends EventTarget = AMap.Map, E = unknown> = (target: C, event: E) => void;
export declare function useEvent<C extends EventTarget = AMap.Map, E = unknown>(target: C | undefined, event: string, callback: EventHandler<C, E> | undefined): void;
