import { Anchor } from '../../utils/types';
import { EventHandler } from '../events';
import { OverlayProps } from '../common/overlay';
import { ZoomsProps } from './zooms';
declare type PointType = AMap.Marker | AMap.Text;
declare type PointEventHandler<C extends PointType, E = any> = EventHandler<C, E>;
export declare type PointProps<C extends PointType> = OverlayProps<C> & ZoomsProps<C> & {
    position: number[];
    title?: string;
    offset?: Vector2;
    anchor?: Anchor;
    angle?: number;
    topWhenClick?: boolean;
    onMoving?: PointEventHandler<C>;
    onMoveEnd?: PointEventHandler<C>;
    onMoveAlong?: PointEventHandler<C>;
};
export default function usePoint<C extends PointType>(target: C | undefined, props: PointProps<C>): void;
export {};
