/// <reference types="react" />
import { LabelOption } from './utils/types';
import { PointProps } from './hooks/common/point';
export declare type MarkerProps = React.PropsWithChildren<PointProps<AMap.Marker> & {
    icon?: AMap.IconOpts | string;
    label?: LabelOption;
    className?: string;
    style?: React.CSSProperties;
}>;
declare const Marker: import("react").ForwardRefExoticComponent<import("./hooks/common/base").BaseProps<AMap.Marker> & import("./hooks/common/visible").VisibleProps<AMap.Marker> & import("./hooks/common/z-index").ZIndexProps<AMap.Marker> & import("./hooks/common/bubble").BubbleProps<AMap.Marker> & import("./hooks/common/cursor").CursorProps<AMap.Marker> & import("./hooks/common/click").ClickProps<AMap.Marker> & {
    clickable?: boolean | undefined;
    onDblClick?: import("./hooks/events").EventHandler<AMap.Marker, unknown> | undefined;
    onRightClick?: import("./hooks/events").EventHandler<AMap.Marker, unknown> | undefined;
} & import("./hooks/common/draggable").DraggableProps<AMap.Marker> & import("./hooks/common/mouse").MouseProps<AMap.Marker> & import("./hooks/common/touch").TouchProps<AMap.Marker> & import("./hooks/common/zooms").ZoomsProps<AMap.Marker> & {
    position: number[];
    title?: string | undefined;
    offset?: number[] | [number, number] | undefined;
    anchor?: "top-left" | "top-center" | "top-right" | "middle-left" | "center" | "middle-right" | "bottom-left" | "bottom-center" | "bottom-right" | undefined;
    angle?: number | undefined;
    topWhenClick?: boolean | undefined;
    onMoving?: import("./hooks/events").EventHandler<AMap.Marker, any> | undefined;
    onMoveEnd?: import("./hooks/events").EventHandler<AMap.Marker, any> | undefined;
    onMoveAlong?: import("./hooks/events").EventHandler<AMap.Marker, any> | undefined;
} & {
    icon?: string | AMap.IconOpts | undefined;
    label?: LabelOption | undefined;
    className?: string | undefined;
    style?: import("react").CSSProperties | undefined;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<AMap.Marker | undefined>>;
export default Marker;
