import e from"./loadAmap.js";import{__assign as t}from"./_virtual/_tslib.js";import o,{forwardRef as r,useRef as n,useEffect as s,useImperativeHandle as a}from"react";import{useEvent as i}from"./hooks/events.js";import{nearPair as u,near as l}from"./utils/compare.js";import m from"./utils/clone.js";import{useBindProp as c}from"./hooks/props.js";import{lngLat2Array as p}from"./utils/convert.js";import{getInitialOptionsFromProps as h}from"./utils/options.js";import d from"./hooks/utils/usePromise.js";import v from"./hooks/utils/useReactiveRef.js";var f=o.createContext(void 0),g=r((function(r,g){var E=n(null),k=v(),M=d((function(){return e()}));s((function(){if(M){var e=E.current;if(e){var o=t({},h(r)),n=r.center;Array.isArray(n)&&(o.center=m(n)),k.current=new M.Map(e,o)}return function(){k.current&&k.current.destroy()}}}),[M]);var C=k.current;return a(g,(function(){return C}),[C]),c(C,{getter:function(e){return p(e.getCenter())},equals:u,setter:function(e,t){e.setCenter(t)}},r.center),c(C,{getter:"getZoom",equals:l,setter:"setZoom"},r.zoom),c(C,{getter:"getRotation",equals:l,setter:"setRotation"},r.rotation),c(C,{getter:"getPitch",equals:l,setter:"setPitch"},r.pitch),c(C,{setter:"setFeatures"},r.features),c(C,{setter:b("dragEnable")},r.dragEnable),c(C,{setter:b("zoomEnable")},r.zoomEnable),c(C,{setter:b("jogEnable")},r.jogEnable),c(C,{setter:b("pitchEnable")},r.pitchEnable),c(C,{setter:b("rotateEnable")},r.rotateEnable),c(C,{setter:b("animateEnable")},r.animateEnable),c(C,{setter:b("keyboardEnable")},r.keyboardEnable),c(C,{setter:b("doubleClickZoom")},r.doubleClickZoom),c(C,{setter:b("scrollWheel")},r.scrollWheel),c(C,{setter:"setDefaultCursor"},r.defaultCursor),c(C,{setter:"setMapStyle"},r.mapStyle),c(C,{setter:b("showIndoorMap")},r.showIndoorMap),i(C,"resize",r.onResize),i(C,"complete",r.onComplete),i(C,"click",r.onClick),i(C,"dblclick",r.onDblClick),i(C,"mapmove",r.onMapMove),i(C,"hotspotclick",r.onHotspotClick),i(C,"hotspotover",r.onHotspotOver),i(C,"hotspotout",r.onHotspotOut),i(C,"movestart",r.onMoveStart),i(C,"moveend",r.onMoveEnd),i(C,"zoomchange",r.onZoomChange),i(C,"zoomstart",r.onZoomStart),i(C,"zoomend",r.onZoomEnd),i(C,"mousemove",r.onMouseMove),i(C,"mousewheel",r.onMouseWheel),i(C,"mouseover",r.onMouseOver),i(C,"mouseout",r.onMouseOut),i(C,"mouseup",r.onMouseUp),i(C,"mousedown",r.onMouseDown),i(C,"rightclick",r.onRightClick),i(C,"dragstart",r.onDragStart),i(C,"dragging",r.onDragging),i(C,"dragend",r.onDragEnd),i(C,"touchstart",r.onTouchStart),i(C,"touchmove",r.onTouchMove),i(C,"touchend",r.onTouchEnd),o.createElement("div",{ref:E,className:"amap-react",style:{position:"relative",width:"100%",height:"100%"}},o.createElement(f.Provider,{value:C},r.children))}));function b(e){return function(t,o){var r;t.setStatus(((r={})[e]=o,r))}}g.AmapContext=f;export default g;export{f as AmapContext};
