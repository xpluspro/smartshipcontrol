import * as tf from "@tensorflow/tfjs";
import { FaceDetector } from "@mediapipe/tasks-vision";
import CVModel from "./CVModel";
import CVImage from "../utils/image";
export type GazeDetections = {
    leftEye: {
        x: number;
        y: number;
    };
    rightEye: {
        x: number;
        y: number;
    };
    yaw: number;
    pitch: number;
}[];
export default class Gaze extends CVModel<GazeDetections> {
    workerId?: string;
    faceDetector?: FaceDetector;
    gazeDetector?: tf.GraphModel;
    isDebugMode: boolean;
    rfModel: any;
    constructor();
    initialize(workerId: string, modelName: string, modelVersion: number, publishableKey: string, isDebugMode?: boolean): Promise<void>;
    private detectGazes;
    infer(img: CVImage): Promise<GazeDetections>;
}
